Пример абстрагирования.

Есть АТД Облигация. В какой-то момент заказчик захотел внести новый тип облигаций - с плавающей ставкой.
А АТД Облигация был спроектирован как облигация с фиксированной ставкой.
Теперь получается, что логично сделать родительский тип Облигация, а от него унаследовать потомков "Облигация с плавающей
ставкой" и "Облигация с фиксированной ставкой".

Пример факторизации.

Есть 3 АТД: Mail (Письмо на электронную почту), UiNotification (Уведомление, которое показывается на UI) и PersonalMessage (Cообщение, которое приходит в личный кабинет).
Способ отсылки сообщений разный, поэтому изначально они могут быть обособленными классами.
Но по мере развития приложения может оказаться, что все больше кода дублируется. Много одинаковых полей, дублируются методы, например метод для создания сообщений.
В результате может быть добавлен общий предок Notification, куда будут вынесены общие поля и методы.
